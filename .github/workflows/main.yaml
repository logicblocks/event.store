name: Main
on:
  push:
    branches:
      - main

jobs:
  check-test-build:
    uses: ./.github/workflows/check-test-build.yaml

  prerelease:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: "write"
      actions: "read"
    needs: [check-test-build]
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_SECRET }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Install tools
        uses: ./.github/actions/asdf-cached-install

      - name: Authenticate with PyPi
        run: ./go poetry:login_to_pypi[${{ secrets.PYPI_API_KEY }}]

      - name: Publish
        run: ./go library:publish:prerelease

      - name: Configure git Author
        run: ./go repository:set_ci_author

      - name: Commit Release
        run: ./go repository:commit_release

      - name: Push Release Commit
        run: ./go repository:push

  release:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: "write"
      actions: "read"
    needs: [prerelease]
    environment: release
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.CI_APP_ID }}
          private-key: ${{ secrets.CI_APP_SECRET }}

      - uses: actions/checkout@v3
        with:
          ref: "main"
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Install tools
        uses: ./.github/actions/asdf-cached-install

      - name: Authenticate with PyPi
        run: ./go poetry:login_to_pypi[${{ secrets.PYPI_API_KEY }}]

      - name: Publish
        run: ./go library:publish:release

      - name: Configure git Author
        run: ./go repository:set_ci_author

      - name: Commit Release
        run: ./go repository:commit_release

      - name: Push Release Commit
        run: ./go repository:push
